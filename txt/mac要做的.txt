安装
homebrew rvm xcode(with comandline tool) paragon-ntfs macvim cloc(代码统计工具)
---------------------------------------
复制粘贴快捷键
cmd+option+v = 剪切
Command+拖拽=剪切

Option+拖拽=复制

Command+Option+拖拽=快捷方式
---------------------------------------
让tmux支持系统的pbcopy pbpaste命令
git clone git://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard.git
或者直接
brew install reattach-to-user-namespace
cd xxx
编译这软件
make reattach-to-user-namespace && cp reattach-to-user-namespace ~/bin #/////
再把这脚本加到.tmux.conf
set-option -g default-command "reattach-to-user-namespace -l zsh"

键盘上没有了 pageUp 和 pageDown的话可以进入copy模式再用emacs方式翻页


---------------------------------------
brew link的用法
有时装ruby的时候例如要--with-openssl-dir
brew install openssl
brew link openssl
这样装ruby的时候就不用再with-openssl-dir了

brew --cache 可以看到cache文件下载到哪里
/Library/Cache/HOMEBREW, 把自己下载的文件移动到这里就可以快速安装

brew search /foo/ 可以用petten去搜索

brew install用代理！
brew install下代码时经常是用sourceforge，这货不时被墙，非常的慢 homebrew提供一个使用proxy的方法
http_proxy=http://<proxyhost>:<proxyport>  sudo -E brew install foo #还可以用sodu
$ http_proxy=http://<user>:<password>@<proxyhost>:<proxyport>  brew install foo #代理要密码的情况

brew 安装指定版本
brew versions zmq
cd `brew --prefix`
然后在brew目录下
brew versions zmq
checkout 查到需要的版本
brew unlink zmq
brew install zmq 就可以了
---------------------------------------
一些mac本来的快捷键
cmd+~ 同一应用多窗口切换
cmd+shift+3 截图保存到桌面,+多个ctrl就保存到粘贴板
cmd+shift+4 选取截图

command+shift(+option)+4然后按下空格键，鼠标变成小相机，选择某一窗口后点击鼠标左键对单个窗口截图。不必担心其它窗口的遮挡。 6.按command+shift(+option)+4然后画一个抓取的区域，不要松开鼠标，接着 (1)按住空格可以移动这个区域 (2)按住Shift将锁定X或者Y轴进行拖动 (3)按住option后将按照区域圆心进行放大

开机时按住C键：光盘开机
开机时按住N键：网络开机
开机时按住T键：硬盘开机
开始时按option键：选择开机磁盘
开机时按command+option+shift+delete组合键：以外接储存装置内的系统开机
开机时按shift键：安全模式开机
开机时按V键：进入Verbose模式
开机时按S键：进入Single-User单人模式
开机时按住鼠标（左）键：将光盘强制退出
开机时按command+option+O+F组合键：进入Open Firmware模式
开机时按住command+option+P+R直到第二声开机声完后放开：清除PRAM
开机时按住command+option+N+V组合键：清除NV RAM
开机时按住Mute静音键：静音开机

让mac唱歌...
osascript -e 'say "Dum dum dum dum dum dum dum he he he ho ho ho fa lah lah lah lah lah lah fa lah full hoo hoo hoo" using "Cellos"'

osascript -e 'say "Dum dum dee dum dum dum dum dee Dum dum dee dum dum dum dum dee dum dee dum dum dum de dum dum dum dee dum dee dum dum dee dummmmmmmmmmmmmmmmm" using "Pipe Organ"'

osascript -e 'say "Dum dum dee dum dum dum dum dee Dum dum dee dum dum dum dum dee dum dee dum dum dum de dum dum dum dee dum dee dum dum dee dummmmmmmmmmmmmmmmm" using "Hysterical"'

osascript -e 'say "oh This is a silly song silly song silly song this is the silliest song ive ever ever heard So why keep you listening listening listening while you are supposed to work to work to work to work its because i hate my job hate my job hate my job its because i hate my job more than anything else No its because youve no life youve no life youve no life and you better go get one after forwarding this crap" using "cellos"'
---------------------------------------


brew install mysql 后要做的事
可以用brew info mysql 查看以下的一些信息
以下是配置顺序，熟悉一下以前php的东西
#my.cnf
在安装目录(/usr/local/Cellar/mysql/xxx/support-file)下有很多种配置文件，
cp xxxx.cnf /etc/my.cnf

放一个最小
[client]
port = 3306
socket = /tmp/mysql.sock
default-character-set = utf8
[mysqld]
collation-server = utf8_unicode_ci
character-set-server = utf8
init-connect ='SET NAMES utf8'
max_allowed_packet = 64M
bind-address = 127.0.0.1
port = 3306
socket = /tmp/mysql.sock

#set up databases to run AS YOUR USER ACCOUNT with:
unset TMPDIR
mysql_install_db --verbose --user=`whoami` --basedir="$(brew --prefix mysql)" --datadir=/usr/local/var/mysql --tmpdir=/tmp #/#////


#为root用户创建密码
/usr/local/Cellar/mysql/5.5.27/bin/mysqladmin -u root password 'new-password'
/usr/local/Cellar/mysql/5.5.27/bin/mysqladmin -u root -h jojotekiMacBook-Pro.local password 'new-password'

#to start the mysql
mysql.server start

#用root登陆进去删掉没用的用户，创建新用户去


#To launch on startup:
* if this is your first install:
mkdir -p ~/Library/LaunchAgents
cp /usr/local/Cellar/mysql/5.5.27/homebrew.mxcl.mysql.plist ~/Library/LaunchAgents/
launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist

* if this is an upgrade and you already have the homebrew.mxcl.mysql.plist loaded:
launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
cp /usr/local/Cellar/mysql/5.5.27/homebrew.mxcl.mysql.plist ~/Library/LaunchAgents/
launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist

You may also need to edit the plist to use the correct "UserName".

-----------------------
让mac默认读写ntfs分区
sudo mv /sbin/mount_ntfs /sbin/mount_ntfs.orig #备份以下
touch /sbin/mounnt_ntfs
vim /sbin/mount_ntfs

#!/bin/sh
/sbin/mount_ntfs.orig -o rw "$@"

sudo chown root:jojo /sbin/mount_ntfs
sudo chmod 755 /sbin/mount_ntfs

--------------------
用zsh替换掉他妈的bash
brew install zsh
git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
再把默认的bash替换成zsh
chsh -s /bin/zsh

autocorrect问题
zsh老为我们处理自动correct, 在某个命令前加nocorrect就不会帮我们correct
alias vim='nocorrect vim '  
把这句加到.zshrc就帮我们关闭correct功能
unsetopt correct_all


--------------------
iterm2让terminal变得更花俏
安装iterm2，在偏好设置键盘的一栏可以设半屏拉出terminal,快捷键设成cmd+\不错

cmd+f 是搜索，搜索到的时候继续按tab的话是向前选择，选择到的东西会自动复制到粘贴版,shift+tab是向后选择

cmd+; 会自动补完之前输入过的命令
cmd+shift+h 查看粘贴板历史
cmd+endter 全屏
--------------------
关掉睡眠把缓存写到ssd
sudo pmset -a hibernatemode 0
复制代码
sudo rm /var/vm/sleepimage*
复制代码


-------------------
通宵下载不休眠
pmset noidle 这命令的窗口一直开着mac就不会进入休眠，可以挂机下载了
-------------------
mac下面的brew装的ctags不是exburent ctags，自己去http://ctags.sourceforge.net/ 编译安装吧
然后装在一个与系统自带的ctags不冲突的路径下,然后在.vimrc里加一行let Tlist_Ctags_Cmd = '/path/to/ctags'就可以了.
-------------------
safari使用goageent翻墙
先在chrome的switch sharp插件导出pac文件
然后在safari设置--高级--代理
(1)自动配置代理 url里面填上刚才导出的pac文件
(2)web代理里填127.0.0.1 8087

------------------
连接windows的共享分区
finder--前往---连接服务器
smb://192.168.1.100
输入用户名密码之后就可以挂载了


---------------
安装nodejs后npm的问题
npm安装后要这样装coffee-script才有全局命令
sudo npm -g install coffee


------------------
chrome goagent switchsharp的导入设置
在线导入这个配置
https://raw.github.com/phus/phus-config/master/SwitchyOptions.bak
证书还要在高级设置打开的窗口里面设成全部信任
------------------
要google搜索结果按最新收录时间排列的小技巧，在搜索结果的地址后加&as_qdr=d
------------------

1. vimrc 添加
se imd 
au InsertEnter * se noimd 
au InsertLeave * se imd
au FocusGained * se imd

2. Input source options 勾选 "Allow a different one for each document".
这个在 Setting -> Language & Text -> Input Sources 里设置。

完美的情况时，vim 获得焦点就禁用输入法，只有进入插入模式才启用输入法，离开禁用。但是标题已经说了，这是个不完美的解决方案：获得焦点（FoucGained）禁止不了输入法！！！这个方法只解决了（1）启用中文输入法时，按i,s能顺利进入插入模式，（2）插入模式输入中文完毕回到普通模式时禁用输入法。

--------------------
进入资源库还有射手影音字幕保存位置
像射手播放器自动下载的字幕就在这个文件夹下
~/Library/Application Support/SPlayerX/SVPSub

方法一：
打开Finder，单击“前往”，此时只有按住“option”键，就能出现“资源库”的选项。



--------------------
打开mac的apache和php简单配置
sudo apachectl start
web目录在/Libbrary/WebServer/Documnet里面
apache配置 /etc/apache/httpd.conf 里面已经有php模块，把前面井号去掉就行,fucking easy!

php配置 cp /etc/php.ini.default /etc/php.ini
日志 /var/log/apache2/
很坑爹的是，如果你httpd.conf错了，日志里面是看不到出错原因, sudo apachectl start stop那里也不会提示出错信息，直接服务器访问不了，要知道的话运行httpd,后面就会说出错的行数

要链接mysqli还要记得修改, brew安装的在/tmp/mysql.sock
pdo_mysql.default_socket=/Applications/MAMP/tmp/mysql/mysql.sock
mysql.default_socket = /Applications/MAMP/tmp/mysql/mysql.sock
mysqli.default_socket = /Applications/MAMP/tmp/mysql/mysql.sock


--------------------
为了在zsh里用个叫power的theme，搞了很多烦死人的东西
首先要装vim插件 vim-powerline, 在他的fontpather文件夹有readme详细怎么 patched font
$ brew update
$ brew install --use-gcc fontforge 
装这东西的时候还会提示装个 Xqua什么叉，一并装上
然后把下来的字体 https://github.com/Lokaltog/vim-powerline/wiki/Patched-fonts
fontforge -script /path/to/fontpatcher MyFontFile.ttf 或者进目录双击也可以安装
然后vimrc下面
set guifont=MyFont\ for\ Powerline
let g:Powerline_symbols = 'fancy'
最后再删掉些东西
$ rm /tmp/Powerline.cache


--------------------------
firesheep sys error
改configure.ac
CFLAGS = -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk -mmacosx-version-min=10.7

--------------------------
垃圾flash问题
youku黑屏
MAC两步搞定：
a.新建txt文件命名为static.youku.com，同时把后缀名txt删除（询问是否以.com作为后缀名是点确认）
b.打开：
/Users/（你的用户名）/Library/Preferences/Macromedia/Flash Player/#SharedObjects/********（一个随机文件夹）/找到名为static.youku.com的文件夹删除，用刚制作的static.youku.com文件替换之。

p2p上传
mms.cfg 文件
在 Mac OS X 系统上， mms.cfg 文件位于 /Library/Application Support/Macromedia 中。
在 Microsoft Windows 系统上，该文件位于系统目录的 Macromedia Flash Player 文件夹中
echo RTMFPP2PDisable=1 >> mms.fcg

----------------------
快速部署ie7, 8 ,9环境
安装virtualbox
curl -s https://raw.github.com/xdissent/ievms/master/ievms.sh | bash

Install ALL versions of Internet Explorer: IE7, IE 8, and IE 9
curl -s https://raw.github.com/xdissent/ievms/master/ievms.sh | bash

Install Internet Explorer 7 Only
curl -s https://raw.github.com/xdissent/ievms/master/ievms.sh | IEVMS_VERSIONS="7" bash

Install Internet Explorer 8 Only
curl -s https://raw.github.com/xdissent/ievms/master/ievms.sh | IEVMS_VERSIONS="8" bash

Install Internet Explorer 9 Only
curl -s https://raw.github.com/xdissent/ievms/master/ievms.sh | IEVMS_VERSIONS="9" bash

打开virtualbox登陆
 password is “Password1″

-------------------
brew install the_silver_searcher
比ack更快的东西
Vim
You can use Ag with ack.vim by adding the following line to your .vimrc:
let g:ackprg = 'ag --nogroup --nocolor --column'

----------------
mac arp防御
在终端输入sudo arp -s 192.168.7.254 00:11:11:11:11:11
其中 192.168.7.254 填你所在网络环境的网关 IP，后面的 12 个数字是网关的 MAC 地址，这样普通的伪装网关攻击就没什么用了。这条命令是永久性的，你可以输入arp -d 192.168.7.254来删除前面绑定的网关 MAC 地址。

--------------
禁用虚拟内存
Mac OS X有个很奇葩的设定，它把内存分为了可用内存、联动内存、活跃内存和非活跃内存，详情可以看《通过活动监视器了解系统内存使用情况》。
其中，当你退出一个软件时，它所占用的部分内存并不会释放，而是标记为非活跃，下次运行它时可以转换成活跃内存。但如果你不幸把可用内存用完了，Mac OS X并不会使用这些非活跃内存，而是直接使用虚拟内存（交换文件），这会严重影响运行效率。
如下命令可以查看当前虚拟内存的大小：
sysctl vm.swapusage
如果你的内存有4GB以上，大部分情况下都已经够用了，于是就可以禁用虚拟内存，以获得更快的速度：
sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.dynamic_pager.plist
禁用以后，磁盘上还保留着这些交换文件，它们已经没用了，也可以删掉：
sudo rm /private/var/vm/swapfile*
如果要重新启用虚拟内存的话，可以执行这条命令：
sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.dynamic_pager.plist
如果要临时释放不活跃内存，可以执行这条命令（需要安装Xcode，执行时会比较卡）：
purge

-------------
brew 安装mongodb
brew update
brew install mongodb
#openssl
brew install mongodb --with-openssl

#upgrade
brew update
brew upgrade mongodb


-------------
brew 更新遇到问题时，reset一下git
cd $(brew --prefix)
git reset --hard HEAD
brew update
